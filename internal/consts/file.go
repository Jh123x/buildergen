package consts

import "golang.org/x/tools/imports"

const (
	PARAM_NAME = "BuilderGen"

	DEFAULT_BUILDER_SUFFIX = "_builder.go"

	BUILD_HEADER  = "// Code generated by " + PARAM_NAME + " "
	BUILD_PACKAGE = "package"
)

var ImportOptions = &imports.Options{
	FormatOnly: false,
	TabIndent:  true,
	Comments:   true,
}

const TemplateValue = `// Code generated by BuilderGen
package {{.Package}}

import (
	{{range .Imports}}
    {{.}}
    {{end}}
)

type {{.Name}}Builder struct {
{{range .Fields}}		{{$.Name}}     b.{{.Type}} {{.Tags}}
{{end}}
}

func New{{.Name}}Builder(b *{{.Name}}) *{{.Name}}Builder {
	if b == nil {
		return nil
	}

	return &{{.Name}}Builder{
{{range .Fields}}		{{.Name}}:     b.{{.Name}},{{end}}
	}
}

{{range .Fields}}
func (b *{{$.Name}}Builder) With{{.Name}}({{.Name}} *{{.Type}}) *{{$.Name}}Builder {
	b.{{.Name}} = {{.Name}}
	return b
}
{{end}}

func (b *{{.Name}}Builder) Build() *{{.Name}} {
	return &{{.Name}}{
{{range .Fields}}		{{.Name}}:     b.{{.Name}},
{{end}}}
}
`
