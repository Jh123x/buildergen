// Code generated by BuilderGen v0.2.0
package cmd

import "github.com/Jh123x/buildergen/internal/consts"

type ConfigBuilder struct {
	Source         string      `yaml:"source"`
	Destination    string      `yaml:"destination"`
	Package        string      `yaml:"package"`
	Name           string      `yaml:"name"`
	WithValidation bool        `yaml:"with-validation"`
	ParserMode     consts.Mode `yaml:"mode"`
}

func NewConfigBuilder(b *Config) *ConfigBuilder {
	if b == nil {
		return nil
	}

	return &ConfigBuilder{
		Source:         b.Source,
		Destination:    b.Destination,
		Package:        b.Package,
		Name:           b.Name,
		WithValidation: b.WithValidation,
		ParserMode:     b.ParserMode,
	}
}

func (b *ConfigBuilder) WithSource(source string) *ConfigBuilder {
	b.Source = source
	return b
}

func (b *ConfigBuilder) WithDestination(destination string) *ConfigBuilder {
	b.Destination = destination
	return b
}

func (b *ConfigBuilder) WithPackage(package_ string) *ConfigBuilder {
	b.Package = package_
	return b
}

func (b *ConfigBuilder) WithName(name string) *ConfigBuilder {
	b.Name = name
	return b
}

func (b *ConfigBuilder) WithWithValidation(withValidation bool) *ConfigBuilder {
	b.WithValidation = withValidation
	return b
}

func (b *ConfigBuilder) WithParserMode(parserMode consts.Mode) *ConfigBuilder {
	b.ParserMode = parserMode
	return b
}

func (b *ConfigBuilder) Build() *Config {
	return &Config{
		Source:         b.Source,
		Destination:    b.Destination,
		Package:        b.Package,
		Name:           b.Name,
		WithValidation: b.WithValidation,
		ParserMode:     b.ParserMode,
	}
}
